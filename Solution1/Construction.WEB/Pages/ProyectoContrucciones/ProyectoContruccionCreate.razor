@page "/ProyectoContruccion/create"
@using Construction.WEB.Repositories
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h1>Creacion Nuevo Proyecto Construccion</h1>


<ProyectoContruccionForn  ProyectoConstruccion="ProyectoConstruccion" OnValidSubmit="Create" ReturnAction="Return" />



@code {
    private ProyectoConstruccion ProyectoConstruccion = new();
    private ProyectoContruccionForn proyectoContruccionForn;

    private async Task Create()
    {


        var responseHttp = await repository.PostAsync("/api/ProyectoConstrucciones", ProyectoConstruccion);
        if (responseHttp.Error)
        {

            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;


        }

        Return();

        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
             });


        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {


        //proyectoContruccionForn!.FormularioPosteadoConExito = true;
        navigationManager.NavigateTo("/proyectoContrucciones");
    }
}