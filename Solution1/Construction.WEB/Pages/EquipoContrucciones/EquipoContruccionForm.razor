@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>


<EditForm Model="equipoConstrucciones" OnValidSubmit="OnValidSubmit" ReturnAction="Return">

    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Nombre:</label>
        <div>
            <InputText @bind-Value="equipoConstrucciones.Nombre" />
            <ValidationMessage For="@(()=>equipoConstrucciones.Nombre)" />
        </div>
    </div>
    <div class="mb-3">
        <label>Especialidades:</label>
        <div>
            <InputText @bind-Value="equipoConstrucciones.Especialidades" />
            <ValidationMessage For="@(()=>equipoConstrucciones.Especialidades)" />
        </div>
    </div>
    <div class="mb-3">
        <label>Lista De Miembros:</label>
        <div>
            <InputText @bind-Value="equipoConstrucciones.ListaMiembros" />
            <ValidationMessage For="@(()=>equipoConstrucciones.ListaMiembros)" />
        </div>
    </div>



    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-info" type="reset">Limpiar</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>


</EditForm>

@code {

        private EditContext editContext = null!;
        protected override void OnInitialized()
        {
        editContext = new(equipoConstrucciones);
        }

    [EditorRequired]
    [Parameter]
    public EquipoConstruccion equipoConstrucciones { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }


    public bool FormularioPosteadoConExito { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formularioFueEditado = editContext.IsModified();

        if (!formularioFueEditado)
        {
            return;
        }

        if (FormularioPosteadoConExito)
        {
            return;
        }

        var resultado = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirmado = !string.IsNullOrEmpty(resultado.Value);

        if (confirmado)
        {
            return;
        }

        context.PreventNavigation();
    }
}
